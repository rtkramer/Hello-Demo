{"ast":null,"code":"var _jsxFileName = \"/Users/richardkramer/Sites/prime-react/src/components/FigmaComponentBuilder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card } from 'primereact/card';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { convertFigmaToPrimeReact, extractFigmaFileKey, extractNodeId } from '../utils/figmaToPrimeReact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FigmaComponentBuilder = () => {\n  _s();\n  const [figmaUrl, setFigmaUrl] = useState('');\n  const [figmaData, setFigmaData] = useState(null);\n  const [generatedComponent, setGeneratedComponent] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleFigmaUrlChange = e => {\n    setFigmaUrl(e.target.value);\n    setError('');\n  };\n  const extractFigmaInfo = () => {\n    const fileKey = extractFigmaFileKey(figmaUrl);\n    const nodeId = extractNodeId(figmaUrl);\n    if (!fileKey) {\n      setError('Invalid Figma URL. Please provide a valid Figma file URL.');\n      return null;\n    }\n    return {\n      fileKey,\n      nodeId\n    };\n  };\n  const fetchFigmaData = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const figmaInfo = extractFigmaInfo();\n      if (!figmaInfo) {\n        setLoading(false);\n        return;\n      }\n\n      // This would typically be done through the MCP server\n      // For now, we'll simulate the process\n      console.log('Fetching Figma data for:', figmaInfo);\n\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock Figma data for demonstration\n      const mockFigmaData = {\n        type: 'FRAME',\n        name: 'Example Component',\n        children: [{\n          type: 'RECTANGLE',\n          name: 'Primary Button',\n          fills: [{\n            type: 'SOLID',\n            color: {\n              r: 0.2,\n              g: 0.4,\n              b: 0.8\n            }\n          }],\n          cornerRadius: 8,\n          absoluteBoundingBox: {\n            width: 120,\n            height: 40\n          }\n        }, {\n          type: 'TEXT',\n          name: 'Heading',\n          characters: 'Welcome to PrimeReact',\n          style: {\n            fontSize: 24,\n            fontWeight: 600,\n            fontFamily: 'Inter'\n          }\n        }]\n      };\n      setFigmaData(mockFigmaData);\n      generateComponent(mockFigmaData);\n    } catch (err) {\n      setError('Failed to fetch Figma data. Please check your URL and try again.');\n      console.error('Error fetching Figma data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateComponent = data => {\n    try {\n      const component = convertFigmaToPrimeReact(data);\n\n      // Convert React element to string representation\n      const componentString = `\nimport React from 'react';\nimport { ${getRequiredImports(data)} } from 'primereact/primereact';\n\nexport const GeneratedComponent = () => {\n  return (\n    ${componentToJSX(component)}\n  );\n};\n      `.trim();\n      setGeneratedComponent(componentString);\n    } catch (err) {\n      setError('Failed to generate component. Please check the Figma data.');\n      console.error('Error generating component:', err);\n    }\n  };\n  const getRequiredImports = data => {\n    const imports = new Set();\n    const extractImports = node => {\n      if (node.type === 'RECTANGLE') {\n        if (node.name.toLowerCase().includes('button')) imports.add('Button');\n        if (node.name.toLowerCase().includes('input')) imports.add('InputText');\n      }\n      if (node.type === 'FRAME' && node.name.toLowerCase().includes('card')) {\n        imports.add('Card');\n      }\n      if (node.children) {\n        node.children.forEach(extractImports);\n      }\n    };\n    extractImports(data);\n    return Array.from(imports).join(', ');\n  };\n  const componentToJSX = component => {\n    // This is a simplified conversion - in a real implementation,\n    // you'd need a more sophisticated React element to JSX string converter\n    return '<div>Generated Component</div>';\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generatedComponent);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Figma to PrimeReact Component Builder\",\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"figmaUrl\",\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Figma URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            id: \"figmaUrl\",\n            value: figmaUrl,\n            onChange: handleFigmaUrlChange,\n            placeholder: \"https://figma.com/file/...\",\n            className: \"w-full mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Fetch Figma Data\",\n            onClick: fetchFigmaData,\n            loading: loading,\n            disabled: !figmaUrl,\n            className: \"mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 mb-3 border-round surface-100 border-1 border-red-200 bg-red-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"pi pi-exclamation-triangle text-red-500 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), figmaData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 md:col-6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Figma Data\",\n            className: \"h-full\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"text-xs overflow-auto\",\n              style: {\n                maxHeight: '300px'\n              },\n              children: JSON.stringify(figmaData, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 md:col-6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Generated PrimeReact Component\",\n            className: \"h-full\",\n            header: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Generated Component\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: \"pi pi-copy\",\n                onClick: copyToClipboard,\n                size: \"small\",\n                text: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(InputTextarea, {\n              value: generatedComponent,\n              readOnly: true,\n              rows: 15,\n              className: \"w-full font-mono text-xs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"How to Use\",\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 md:col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Step 1: Get Figma URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-600\",\n            children: [\"1. Open your Figma design\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 40\n            }, this), \"2. Select the component you want to convert\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 58\n            }, this), \"3. Copy the URL from your browser\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 md:col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Step 2: Generate Component\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-600\",\n            children: [\"1. Paste the Figma URL above\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 43\n            }, this), \"2. Click \\\"Fetch Figma Data\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 42\n            }, this), \"3. Review the generated PrimeReact component\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Supported Components\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 md:col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Basic Components\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Buttons (with variants)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Input fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Text elements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 md:col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Layout Components\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Frames\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Groups\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Containers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 md:col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Styling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Colors and fills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Borders and strokes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Shadows and effects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Typography\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(FigmaComponentBuilder, \"jyXC3StllfOofv0l35GNc+VfOWk=\");\n_c = FigmaComponentBuilder;\nexport default FigmaComponentBuilder;\nvar _c;\n$RefreshReg$(_c, \"FigmaComponentBuilder\");","map":{"version":3,"names":["React","useState","Card","InputText","Button","InputTextarea","convertFigmaToPrimeReact","extractFigmaFileKey","extractNodeId","jsxDEV","_jsxDEV","FigmaComponentBuilder","_s","figmaUrl","setFigmaUrl","figmaData","setFigmaData","generatedComponent","setGeneratedComponent","loading","setLoading","error","setError","handleFigmaUrlChange","e","target","value","extractFigmaInfo","fileKey","nodeId","fetchFigmaData","figmaInfo","console","log","Promise","resolve","setTimeout","mockFigmaData","type","name","children","fills","color","r","g","b","cornerRadius","absoluteBoundingBox","width","height","characters","style","fontSize","fontWeight","fontFamily","generateComponent","err","data","component","componentString","getRequiredImports","componentToJSX","trim","imports","Set","extractImports","node","toLowerCase","includes","add","forEach","Array","from","join","copyToClipboard","navigator","clipboard","writeText","className","title","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","placeholder","label","onClick","disabled","maxHeight","JSON","stringify","header","icon","size","text","readOnly","rows","_c","$RefreshReg$"],"sources":["/Users/richardkramer/Sites/prime-react/src/components/FigmaComponentBuilder.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card } from 'primereact/card';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { convertFigmaToPrimeReact, extractFigmaFileKey, extractNodeId } from '../utils/figmaToPrimeReact';\n\nconst FigmaComponentBuilder = () => {\n  const [figmaUrl, setFigmaUrl] = useState('');\n  const [figmaData, setFigmaData] = useState(null);\n  const [generatedComponent, setGeneratedComponent] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleFigmaUrlChange = (e) => {\n    setFigmaUrl(e.target.value);\n    setError('');\n  };\n\n  const extractFigmaInfo = () => {\n    const fileKey = extractFigmaFileKey(figmaUrl);\n    const nodeId = extractNodeId(figmaUrl);\n    \n    if (!fileKey) {\n      setError('Invalid Figma URL. Please provide a valid Figma file URL.');\n      return null;\n    }\n    \n    return { fileKey, nodeId };\n  };\n\n  const fetchFigmaData = async () => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      const figmaInfo = extractFigmaInfo();\n      if (!figmaInfo) {\n        setLoading(false);\n        return;\n      }\n\n      // This would typically be done through the MCP server\n      // For now, we'll simulate the process\n      console.log('Fetching Figma data for:', figmaInfo);\n      \n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock Figma data for demonstration\n      const mockFigmaData = {\n        type: 'FRAME',\n        name: 'Example Component',\n        children: [\n          {\n            type: 'RECTANGLE',\n            name: 'Primary Button',\n            fills: [{ type: 'SOLID', color: { r: 0.2, g: 0.4, b: 0.8 } }],\n            cornerRadius: 8,\n            absoluteBoundingBox: { width: 120, height: 40 }\n          },\n          {\n            type: 'TEXT',\n            name: 'Heading',\n            characters: 'Welcome to PrimeReact',\n            style: {\n              fontSize: 24,\n              fontWeight: 600,\n              fontFamily: 'Inter'\n            }\n          }\n        ]\n      };\n      \n      setFigmaData(mockFigmaData);\n      generateComponent(mockFigmaData);\n      \n    } catch (err) {\n      setError('Failed to fetch Figma data. Please check your URL and try again.');\n      console.error('Error fetching Figma data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateComponent = (data) => {\n    try {\n      const component = convertFigmaToPrimeReact(data);\n      \n      // Convert React element to string representation\n      const componentString = `\nimport React from 'react';\nimport { ${getRequiredImports(data)} } from 'primereact/primereact';\n\nexport const GeneratedComponent = () => {\n  return (\n    ${componentToJSX(component)}\n  );\n};\n      `.trim();\n      \n      setGeneratedComponent(componentString);\n    } catch (err) {\n      setError('Failed to generate component. Please check the Figma data.');\n      console.error('Error generating component:', err);\n    }\n  };\n\n  const getRequiredImports = (data) => {\n    const imports = new Set();\n    \n    const extractImports = (node) => {\n      if (node.type === 'RECTANGLE') {\n        if (node.name.toLowerCase().includes('button')) imports.add('Button');\n        if (node.name.toLowerCase().includes('input')) imports.add('InputText');\n      }\n      if (node.type === 'FRAME' && node.name.toLowerCase().includes('card')) {\n        imports.add('Card');\n      }\n      if (node.children) {\n        node.children.forEach(extractImports);\n      }\n    };\n    \n    extractImports(data);\n    return Array.from(imports).join(', ');\n  };\n\n  const componentToJSX = (component) => {\n    // This is a simplified conversion - in a real implementation,\n    // you'd need a more sophisticated React element to JSX string converter\n    return '<div>Generated Component</div>';\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generatedComponent);\n  };\n\n  return (\n    <div className=\"p-4\">\n      <Card title=\"Figma to PrimeReact Component Builder\" className=\"mb-4\">\n        <div className=\"grid\">\n          <div className=\"col-12\">\n            <label htmlFor=\"figmaUrl\" className=\"block text-sm font-medium mb-2\">\n              Figma URL\n            </label>\n            <InputText\n              id=\"figmaUrl\"\n              value={figmaUrl}\n              onChange={handleFigmaUrlChange}\n              placeholder=\"https://figma.com/file/...\"\n              className=\"w-full mb-3\"\n            />\n            <Button\n              label=\"Fetch Figma Data\"\n              onClick={fetchFigmaData}\n              loading={loading}\n              disabled={!figmaUrl}\n              className=\"mb-3\"\n            />\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"p-3 mb-3 border-round surface-100 border-1 border-red-200 bg-red-50\">\n            <i className=\"pi pi-exclamation-triangle text-red-500 mr-2\"></i>\n            {error}\n          </div>\n        )}\n\n        {figmaData && (\n          <div className=\"grid\">\n            <div className=\"col-12 md:col-6\">\n              <Card title=\"Figma Data\" className=\"h-full\">\n                <pre className=\"text-xs overflow-auto\" style={{ maxHeight: '300px' }}>\n                  {JSON.stringify(figmaData, null, 2)}\n                </pre>\n              </Card>\n            </div>\n            <div className=\"col-12 md:col-6\">\n              <Card \n                title=\"Generated PrimeReact Component\" \n                className=\"h-full\"\n                header={\n                  <div className=\"flex justify-content-between align-items-center\">\n                    <span>Generated Component</span>\n                    <Button\n                      icon=\"pi pi-copy\"\n                      onClick={copyToClipboard}\n                      size=\"small\"\n                      text\n                    />\n                  </div>\n                }\n              >\n                <InputTextarea\n                  value={generatedComponent}\n                  readOnly\n                  rows={15}\n                  className=\"w-full font-mono text-xs\"\n                />\n              </Card>\n            </div>\n          </div>\n        )}\n      </Card>\n\n      <Card title=\"How to Use\" className=\"mb-4\">\n        <div className=\"grid\">\n          <div className=\"col-12 md:col-6\">\n            <h3>Step 1: Get Figma URL</h3>\n            <p className=\"text-sm text-600\">\n              1. Open your Figma design<br/>\n              2. Select the component you want to convert<br/>\n              3. Copy the URL from your browser\n            </p>\n          </div>\n          <div className=\"col-12 md:col-6\">\n            <h3>Step 2: Generate Component</h3>\n            <p className=\"text-sm text-600\">\n              1. Paste the Figma URL above<br/>\n              2. Click \"Fetch Figma Data\"<br/>\n              3. Review the generated PrimeReact component\n            </p>\n          </div>\n        </div>\n      </Card>\n\n      <Card title=\"Supported Components\">\n        <div className=\"grid\">\n          <div className=\"col-12 md:col-4\">\n            <h4>Basic Components</h4>\n            <ul className=\"text-sm\">\n              <li>Buttons (with variants)</li>\n              <li>Input fields</li>\n              <li>Text elements</li>\n              <li>Cards</li>\n            </ul>\n          </div>\n          <div className=\"col-12 md:col-4\">\n            <h4>Layout Components</h4>\n            <ul className=\"text-sm\">\n              <li>Frames</li>\n              <li>Groups</li>\n              <li>Containers</li>\n            </ul>\n          </div>\n          <div className=\"col-12 md:col-4\">\n            <h4>Styling</h4>\n            <ul className=\"text-sm\">\n              <li>Colors and fills</li>\n              <li>Borders and strokes</li>\n              <li>Shadows and effects</li>\n              <li>Typography</li>\n            </ul>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default FigmaComponentBuilder; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}