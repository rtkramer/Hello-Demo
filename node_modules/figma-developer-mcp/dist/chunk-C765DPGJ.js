import{a as c,b as E}from"./chunk-Q77VG2BX.js";import{c as Y,d as k,e as R,f as D}from"./chunk-HDFA5JOA.js";import{StdioServerTransport as gt}from"@modelcontextprotocol/sdk/server/stdio.js";import{config as pt}from"dotenv";import{resolve as ut}from"path";import{config as Ee}from"dotenv";import De from"yargs";import{hideBin as Ne}from"yargs/helpers";import{resolve as J}from"path";function Z(e){return!e||e.length<=4?"****":`****${e.slice(-4)}`}function Q(e){let t=De(Ne(process.argv)).options({"figma-api-key":{type:"string",description:"Figma API key (Personal Access Token)"},"figma-oauth-token":{type:"string",description:"Figma OAuth Bearer token"},env:{type:"string",description:"Path to custom .env file to load environment variables from"},port:{type:"number",description:"Port to run the server on"},json:{type:"boolean",description:"Output data from tools in JSON format instead of YAML",default:!1},"skip-image-downloads":{type:"boolean",description:"Do not register the download_figma_images tool (skip image downloads)",default:!1}}).help().version("0.5.0").parseSync(),o,r;t.env?(o=J(t.env),r="cli"):(o=J(process.cwd(),".env"),r="default"),Ee({path:o,override:!0});let i={figmaApiKey:"",figmaOAuthToken:"",useOAuth:!1},n={port:3333,outputFormat:"yaml",skipImageDownloads:!1,configSources:{figmaApiKey:"env",figmaOAuthToken:"none",port:"default",outputFormat:"default",envFile:r,skipImageDownloads:"default"}};return t["figma-api-key"]?(i.figmaApiKey=t["figma-api-key"],n.configSources.figmaApiKey="cli"):process.env.FIGMA_API_KEY&&(i.figmaApiKey=process.env.FIGMA_API_KEY,n.configSources.figmaApiKey="env"),t["figma-oauth-token"]?(i.figmaOAuthToken=t["figma-oauth-token"],n.configSources.figmaOAuthToken="cli",i.useOAuth=!0):process.env.FIGMA_OAUTH_TOKEN&&(i.figmaOAuthToken=process.env.FIGMA_OAUTH_TOKEN,n.configSources.figmaOAuthToken="env",i.useOAuth=!0),t.port?(n.port=t.port,n.configSources.port="cli"):process.env.PORT&&(n.port=parseInt(process.env.PORT,10),n.configSources.port="env"),t.json?(n.outputFormat="json",n.configSources.outputFormat="cli"):process.env.OUTPUT_FORMAT&&(n.outputFormat=process.env.OUTPUT_FORMAT,n.configSources.outputFormat="env"),t["skip-image-downloads"]?(n.skipImageDownloads=!0,n.configSources.skipImageDownloads="cli"):process.env.SKIP_IMAGE_DOWNLOADS==="true"&&(n.skipImageDownloads=!0,n.configSources.skipImageDownloads="env"),!i.figmaApiKey&&!i.figmaOAuthToken&&(console.error("Either FIGMA_API_KEY or FIGMA_OAUTH_TOKEN is required (via CLI argument or .env file)"),process.exit(1)),e||(console.log(`
Configuration:`),console.log(`- ENV_FILE: ${o} (source: ${n.configSources.envFile})`),i.useOAuth?(console.log(`- FIGMA_OAUTH_TOKEN: ${Z(i.figmaOAuthToken)} (source: ${n.configSources.figmaOAuthToken})`),console.log("- Authentication Method: OAuth Bearer Token")):(console.log(`- FIGMA_API_KEY: ${Z(i.figmaApiKey)} (source: ${n.configSources.figmaApiKey})`),console.log("- Authentication Method: Personal Access Token (X-Figma-Token)")),console.log(`- PORT: ${n.port} (source: ${n.configSources.port})`),console.log(`- OUTPUT_FORMAT: ${n.outputFormat} (source: ${n.configSources.outputFormat})`),console.log(`- SKIP_IMAGE_DOWNLOADS: ${n.skipImageDownloads} (source: ${n.configSources.skipImageDownloads})`),console.log()),{...n,auth:i}}import{randomUUID as ke}from"node:crypto";import ee from"express";import{SSEServerTransport as $e}from"@modelcontextprotocol/sdk/server/sse.js";import{StreamableHTTPServerTransport as Ce}from"@modelcontextprotocol/sdk/server/streamableHttp.js";import{isInitializeRequest as Pe}from"@modelcontextprotocol/sdk/types.js";import"@modelcontextprotocol/sdk/server/mcp.js";var Oe=null,w={streamable:{},sse:{}};async function oe(e,t){let o=ee();o.use("/mcp",ee.json()),o.post("/mcp",async(i,n)=>{c.log("Received StreamableHTTP request");let s=i.headers["mcp-session-id"],a;if(s&&w.streamable[s])c.log("Reusing existing StreamableHTTP transport for sessionId",s),a=w.streamable[s];else if(!s&&Pe(i.body))c.log("New initialization request for StreamableHTTP sessionId",s),a=new Ce({sessionIdGenerator:()=>ke(),onsessioninitialized:u=>{w.streamable[u]=a}}),a.onclose=()=>{a.sessionId&&delete w.streamable[a.sessionId]},await t.connect(a);else{c.log("Invalid request:",i.body),n.status(400).json({jsonrpc:"2.0",error:{code:-32e3,message:"Bad Request: No valid session ID provided"},id:null});return}let l=null,d=i.body.params?._meta?.progressToken,h=0;d&&(c.log(`Setting up progress notifications for token ${d} on session ${s}`),l=setInterval(async()=>{c.log("Sending progress notification",h),await t.server.notification({method:"notifications/progress",params:{progress:h,progressToken:d}}),h++},1e3)),c.log("Handling StreamableHTTP request"),await a.handleRequest(i,n,i.body),l&&clearInterval(l),c.log("StreamableHTTP request handled")});let r=async(i,n)=>{let s=i.headers["mcp-session-id"];if(!s||!w.streamable[s]){n.status(400).send("Invalid or missing session ID");return}console.log(`Received session termination request for session ${s}`);try{await w.streamable[s].handleRequest(i,n)}catch(a){console.error("Error handling session termination:",a),n.headersSent||n.status(500).send("Error processing session termination")}};o.get("/mcp",r),o.delete("/mcp",r),o.get("/sse",async(i,n)=>{c.log("Establishing new SSE connection");let s=new $e("/messages",n);c.log(`New SSE connection established for sessionId ${s.sessionId}`),c.log("/sse request headers:",i.headers),c.log("/sse request body:",i.body),w.sse[s.sessionId]=s,n.on("close",()=>{delete w.sse[s.sessionId]}),await t.connect(s)}),o.post("/messages",async(i,n)=>{let s=i.query.sessionId,a=w.sse[s];if(a)c.log(`Received SSE message for sessionId ${s}`),c.log("/messages request headers:",i.headers),c.log("/messages request body:",i.body),await a.handlePostMessage(i,n);else{n.status(400).send(`No transport found for sessionId ${s}`);return}}),Oe=o.listen(e,()=>{c.log(`HTTP server listening on port ${e}`),c.log(`SSE endpoint available at http://localhost:${e}/sse`),c.log(`Message endpoint available at http://localhost:${e}/messages`),c.log(`StreamableHTTP endpoint available at http://localhost:${e}/mcp`)}),process.on("SIGINT",async()=>{c.log("Shutting down server..."),await te(w.sse),await te(w.streamable),c.log("Server shutdown complete"),process.exit(0)})}async function te(e){for(let t in e)try{await e[t]?.close(),delete e[t]}catch(o){console.error(`Error closing transport for session ${t}:`,o)}}import{McpServer as lt}from"@modelcontextprotocol/sdk/server/mcp.js";import Le from"fs";import re from"sharp";async function Ge(e,t){let{Logger:o}=await import("./logger-RNG6OBLU.js");try{let r=t[0]?.[0]??1,i=t[0]?.[1]??0,n=t[0]?.[2]??0,s=t[1]?.[0]??0,a=t[1]?.[1]??1,l=t[1]?.[2]??0,d=re(e),h=await d.metadata();if(!h.width||!h.height)throw new Error(`Could not get image dimensions for ${e}`);let{width:u,height:m}=h,g=Math.max(0,Math.round(n*u)),f=Math.max(0,Math.round(l*m)),p=Math.min(u-g,Math.round(r*u)),y=Math.min(m-f,Math.round(a*m));if(p<=0||y<=0)return o.log(`Invalid crop dimensions for ${e}, using original image`),e;let b=e+".tmp";return await d.extract({left:g,top:f,width:p,height:y}).toFile(b),Le.renameSync(b,e),o.log(`Cropped image saved (overwritten): ${e}`),o.log(`Crop region: ${g}, ${f}, ${p}x${y} from ${u}x${m}`),e}catch(r){return o.error(`Error cropping image ${e}:`,r),e}}async function ie(e){let{Logger:t}=await import("./logger-RNG6OBLU.js");try{let o=await re(e).metadata();if(!o.width||!o.height)throw new Error(`Could not get image dimensions for ${e}`);return{width:o.width,height:o.height}}catch(o){return t.error(`Error getting image dimensions for ${e}:`,o),{width:1e3,height:1e3}}}async function $(e,t,o,r=!1,i,n=!1){let{Logger:s}=await import("./logger-RNG6OBLU.js"),a=[],{downloadFigmaImage:l}=await import("./common-D7KV4EZS.js"),d=await l(e,t,o);s.log(`Downloaded original image: ${d}`);let h=await ie(d);s.log(`Original dimensions: ${h.width}x${h.height}`);let u=d,m=!1,g;if(r&&i){s.log("Applying crop transform...");let y=i[0]?.[0]??1,b=i[1]?.[1]??1,T=i[0]?.[2]??0,F=i[1]?.[2]??0,I=Math.max(0,Math.round(T*h.width)),M=Math.max(0,Math.round(F*h.height)),H=Math.min(h.width-I,Math.round(y*h.width)),V=Math.min(h.height-M,Math.round(b*h.height));H>0&&V>0?(g={left:I,top:M,width:H,height:V},u=await Ge(d,i),m=!0,s.log(`Cropped to region: ${I}, ${M}, ${H}x${V}`)):s.log("Invalid crop dimensions, keeping original image")}let f=await ie(u);s.log(`Final dimensions: ${f.width}x${f.height}`);let p;return n&&(p=Be(f)),{filePath:u,originalDimensions:h,finalDimensions:f,wasCropped:m,cropRegion:g,cssVariables:p,processingLog:a}}function Be({width:e,height:t}){return`--original-width: ${e}px; --original-height: ${t}px;`}import{exec as Me}from"child_process";import{promisify as He}from"util";var Ve=He(Me);async function ne(e,t={}){try{let o=await fetch(e,t);if(!o.ok)throw new Error(`Fetch failed with status ${o.status}: ${o.statusText}`);return await o.json()}catch(o){c.log(`[fetchWithRetry] Initial fetch failed for ${e}: ${o.message}. Likely a corporate proxy or SSL issue. Attempting curl fallback.`);let i=`curl -s -S --fail-with-body -L ${je(t.headers).join(" ")} "${e}"`;try{c.log(`[fetchWithRetry] Executing curl command: ${i}`);let{stdout:n,stderr:s}=await Ve(i);if(s){if(!n||s.toLowerCase().includes("error")||s.toLowerCase().includes("fail"))throw new Error(`Curl command failed with stderr: ${s}`);c.log(`[fetchWithRetry] Curl command for ${e} produced stderr (but might be informational): ${s}`)}if(!n)throw new Error("Curl command returned empty stdout.");return JSON.parse(n)}catch(n){throw c.error(`[fetchWithRetry] Curl fallback also failed for ${e}: ${n.message}`),o}}}function je(e){return e?Object.entries(e).map(([t,o])=>`-H "${t}: ${o}"`):[]}var C=class{apiKey;oauthToken;useOAuth;baseUrl="https://api.figma.com/v1";constructor({figmaApiKey:t,figmaOAuthToken:o,useOAuth:r}){this.apiKey=t||"",this.oauthToken=o||"",this.useOAuth=!!r&&!!this.oauthToken}getAuthHeaders(){return this.useOAuth?(c.log("Using OAuth Bearer token for authentication"),{Authorization:`Bearer ${this.oauthToken}`}):(c.log("Using Personal Access Token for authentication"),{"X-Figma-Token":this.apiKey})}filterValidImages(t){return t?Object.fromEntries(Object.entries(t).filter(([,o])=>!!o)):{}}async request(t){try{c.log(`Calling ${this.baseUrl}${t}`);let o=this.getAuthHeaders();return await ne(`${this.baseUrl}${t}`,{headers:o})}catch(o){let r=o instanceof Error?o.message:String(o);throw new Error(`Failed to make request to Figma API endpoint '${t}': ${r}`)}}buildSvgQueryParams(t,o){return new URLSearchParams({ids:t.join(","),format:"svg",svg_outline_text:String(o.outlineText),svg_include_id:String(o.includeId),svg_simplify_stroke:String(o.simplifyStroke)}).toString()}async getImageFillUrls(t){let o=`/files/${t}/images`;return(await this.request(o)).meta.images||{}}async getNodeRenderUrls(t,o,r,i={}){if(o.length===0)return{};if(r==="png"){let n=i.pngScale||2,s=`/images/${t}?ids=${o.join(",")}&format=png&scale=${n}`,a=await this.request(s);return this.filterValidImages(a.images)}else{let n=i.svgOptions||{outlineText:!0,includeId:!1,simplifyStroke:!0},s=this.buildSvgQueryParams(o,n),a=`/images/${t}?${s}`,l=await this.request(a);return this.filterValidImages(l.images)}}async downloadImages(t,o,r,i={}){if(r.length===0)return[];let{pngScale:n=2,svgOptions:s}=i,a=[],l=r.filter(u=>!!u.imageRef),d=r.filter(u=>!!u.nodeId);if(l.length>0){let u=await this.getImageFillUrls(t),m=l.map(({imageRef:g,fileName:f,needsCropping:p,cropTransform:y,requiresImageDimensions:b})=>{let T=u[g];return T?$(f,o,T,p,y,b):null}).filter(g=>g!==null);m.length>0&&a.push(Promise.all(m))}if(d.length>0){let u=d.filter(g=>!g.fileName.toLowerCase().endsWith(".svg")),m=d.filter(g=>g.fileName.toLowerCase().endsWith(".svg"));if(u.length>0){let g=await this.getNodeRenderUrls(t,u.map(p=>p.nodeId),"png",{pngScale:n}),f=u.map(({nodeId:p,fileName:y,needsCropping:b,cropTransform:T,requiresImageDimensions:F})=>{let I=g[p];return I?$(y,o,I,b,T,F):null}).filter(p=>p!==null);f.length>0&&a.push(Promise.all(f))}if(m.length>0){let g=await this.getNodeRenderUrls(t,m.map(p=>p.nodeId),"svg",{svgOptions:s}),f=m.map(({nodeId:p,fileName:y,needsCropping:b,cropTransform:T,requiresImageDimensions:F})=>{let I=g[p];return I?$(y,o,I,b,T,F):null}).filter(p=>p!==null);f.length>0&&a.push(Promise.all(f))}}return(await Promise.all(a)).flat()}async getRawFile(t,o){let r=`/files/${t}${o?`?depth=${o}`:""}`;c.log(`Retrieving raw Figma file: ${t} (depth: ${o??"default"})`);let i=await this.request(r);return E("figma-raw.json",i),i}async getRawNode(t,o,r){let i=`/files/${t}/nodes?ids=${o}${r?`&depth=${r}`:""}`;c.log(`Retrieving raw Figma node: ${o} from ${t} (depth: ${r??"default"})`);let n=await this.request(i);return E("figma-raw.json",n),n}};import{z as B}from"zod";import{isTruthy as se}from"remeda";function S(e,t,o){if(!(typeof t=="object"&&t!==null)||!(e in t))return!1;let i=t[e];return o?o(i):i!==void 0}function P(e){return typeof e=="object"&&!!e&&"clipsContent"in e&&typeof e.clipsContent=="boolean"}function j(e){return typeof e=="object"&&!!e&&"absoluteBoundingBox"in e&&typeof e.absoluteBoundingBox=="object"&&!!e.absoluteBoundingBox&&"x"in e.absoluteBoundingBox&&"y"in e.absoluteBoundingBox&&"width"in e.absoluteBoundingBox&&"height"in e.absoluteBoundingBox}function ae(e,t){let o=["HORIZONTAL","VERTICAL"];return P(t)&&o.includes(t.layoutMode??"NONE")&&j(e)&&e.layoutPositioning!=="ABSOLUTE"}function le(e){return typeof e=="object"&&e!==null&&"top"in e&&"right"in e&&"bottom"in e&&"left"in e}function ce(e,t){let o=t;return typeof t=="object"&&!!t&&e in o&&typeof o[e]=="object"&&!!o[e]&&"x"in o[e]&&"y"in o[e]&&"width"in o[e]&&"height"in o[e]}function me(e){return Array.isArray(e)&&e.length===4&&e.every(t=>typeof t=="number")}function _(e,t,o={},r={styles:{}}){let i={globalVars:r,currentDepth:0};return{nodes:e.filter(s=>z(s,o)).map(s=>ge(s,t,i,o)).filter(s=>s!==null),globalVars:i.globalVars}}function ge(e,t,o,r){if(!z(e,r))return null;let i={id:e.id,name:e.name,type:e.type==="VECTOR"?"IMAGE-SVG":e.type};for(let n of t)n(e,i,o);if(ze(e,o,r)){let n={...o,currentDepth:o.currentDepth+1,parent:e};if(S("children",e)&&e.children.length>0){let s=e.children.filter(a=>z(a,r)).map(a=>ge(a,t,n,r)).filter(a=>a!==null);s.length>0&&(i.children=s)}}return i}function z(e,t){return!(!R(e)||t.nodeFilter&&!t.nodeFilter(e))}function ze(e,t,o){return!(o.maxDepth!==void 0&&t.currentDepth>=o.maxDepth)}function pe(e){return Object.fromEntries(Object.entries(e).map(([t,o])=>[t,{id:t,key:o.key,name:o.name,componentSetId:o.componentSetId}]))}function ue(e){return Object.fromEntries(Object.entries(e).map(([t,o])=>[t,{id:t,key:o.key,name:o.name,description:o.description}]))}function U(e,t,o={}){let{metadata:r,rawNodes:i,components:n,componentSets:s}=_e(e),a={styles:{}},{nodes:l,globalVars:d}=_(i,t,o,a);return{...r,nodes:l,components:pe(n),componentSets:ue(s),globalVars:d}}function _e(e){let t={},o={},r;if("nodes"in e){let a=Object.values(e.nodes);a.forEach(l=>{l.components&&Object.assign(t,l.components),l.componentSets&&Object.assign(o,l.componentSets)}),r=a.map(l=>l.document).filter(R)}else Object.assign(t,e.components),Object.assign(o,e.componentSets),r=e.document.children.filter(R);let{name:i,lastModified:n,thumbnailUrl:s}=e;return{metadata:{name:i,lastModified:n,thumbnailUrl:s||""},rawNodes:r,components:t,componentSets:o}}function he(e,t){let o=We(e),r=Ke(e,t,o.mode)||{};return{...o,...r}}function fe(e,t){if(t&&t.mode!=="none"){let{children:o,mode:r,axis:i}=t,n=qe(i,r);if(o.length>0&&o.reduce((a,l)=>a?"layoutPositioning"in l&&l.layoutPositioning==="ABSOLUTE"?!0:n==="horizontal"?"layoutSizingHorizontal"in l&&l.layoutSizingHorizontal==="FILL":n==="vertical"?"layoutSizingVertical"in l&&l.layoutSizingVertical==="FILL":!1:!1,!0))return"stretch"}switch(e){case"MIN":return;case"MAX":return"flex-end";case"CENTER":return"center";case"SPACE_BETWEEN":return"space-between";case"BASELINE":return"baseline";default:return}}function Ue(e){switch(e){case"MIN":return;case"MAX":return"flex-end";case"CENTER":return"center";case"STRETCH":return"stretch";default:return}}function de(e){if(e==="FIXED")return"fixed";if(e==="FILL")return"fill";if(e==="HUG")return"hug"}function qe(e,t){switch(e){case"primary":switch(t){case"row":return"horizontal";case"column":return"vertical"}case"counter":switch(t){case"row":return"horizontal";case"column":return"vertical"}}}function We(e){if(!P(e))return{mode:"none"};let t={mode:!e.layoutMode||e.layoutMode==="NONE"?"none":e.layoutMode==="HORIZONTAL"?"row":"column"},o=[];return e.overflowDirection?.includes("HORIZONTAL")&&o.push("x"),e.overflowDirection?.includes("VERTICAL")&&o.push("y"),o.length>0&&(t.overflowScroll=o),t.mode==="none"||(t.justifyContent=fe(e.primaryAxisAlignItems??"MIN",{children:e.children,axis:"primary",mode:t.mode}),t.alignItems=fe(e.counterAxisAlignItems??"MIN",{children:e.children,axis:"counter",mode:t.mode}),t.alignSelf=Ue(e.layoutAlign),t.wrap=e.layoutWrap==="WRAP"?!0:void 0,t.gap=e.itemSpacing?`${e.itemSpacing??0}px`:void 0,(e.paddingTop||e.paddingBottom||e.paddingLeft||e.paddingRight)&&(t.padding=k({top:e.paddingTop??0,right:e.paddingRight??0,bottom:e.paddingBottom??0,left:e.paddingLeft??0}))),t}function Ke(e,t,o){if(!j(e))return;let r={mode:o};if(r.sizing={horizontal:de(e.layoutSizingHorizontal),vertical:de(e.layoutSizingVertical)},P(t)&&!ae(e,t)&&(e.layoutPositioning==="ABSOLUTE"&&(r.position="absolute"),e.absoluteBoundingBox&&t.absoluteBoundingBox&&(r.locationRelativeToParent={x:D(e.absoluteBoundingBox.x-t.absoluteBoundingBox.x),y:D(e.absoluteBoundingBox.y-t.absoluteBoundingBox.y)})),ce("absoluteBoundingBox",e)){let i={};o==="row"?(!e.layoutGrow&&e.layoutSizingHorizontal=="FIXED"&&(i.width=e.absoluteBoundingBox.width),e.layoutAlign!=="STRETCH"&&e.layoutSizingVertical=="FIXED"&&(i.height=e.absoluteBoundingBox.height)):o==="column"?(e.layoutAlign!=="STRETCH"&&e.layoutSizingHorizontal=="FIXED"&&(i.width=e.absoluteBoundingBox.width),!e.layoutGrow&&e.layoutSizingVertical=="FIXED"&&(i.height=e.absoluteBoundingBox.height),e.preserveRatio&&(i.aspectRatio=e.absoluteBoundingBox?.width/e.absoluteBoundingBox?.height)):((!e.layoutSizingHorizontal||e.layoutSizingHorizontal==="FIXED")&&(i.width=e.absoluteBoundingBox.width),(!e.layoutSizingVertical||e.layoutSizingVertical==="FIXED")&&(i.height=e.absoluteBoundingBox.height)),Object.keys(i).length>0&&(i.width&&(i.width=D(i.width)),i.height&&(i.height=D(i.height)),r.dimensions=i)}return r}function Xe(e,t,o){let r=t;switch(e){case"FILL":return{css:r?{backgroundSize:"cover",backgroundRepeat:"no-repeat",isBackground:!0}:{objectFit:"cover",isBackground:!1},processing:{needsCropping:!1,requiresImageDimensions:!1}};case"FIT":return{css:r?{backgroundSize:"contain",backgroundRepeat:"no-repeat",isBackground:!0}:{objectFit:"contain",isBackground:!1},processing:{needsCropping:!1,requiresImageDimensions:!1}};case"TILE":return{css:{backgroundRepeat:"repeat",backgroundSize:o?`calc(var(--original-width) * ${o}) calc(var(--original-height) * ${o})`:"auto",isBackground:!0},processing:{needsCropping:!1,requiresImageDimensions:!0}};case"STRETCH":return{css:r?{backgroundSize:"100% 100%",backgroundRepeat:"no-repeat",isBackground:!0}:{objectFit:"fill",isBackground:!1},processing:{needsCropping:!1,requiresImageDimensions:!1}};default:return{css:{},processing:{needsCropping:!1,requiresImageDimensions:!1}}}}function Ye(e){let o=e.flat().reduce((r,i)=>{let n=i.toString();for(let s=0;s<n.length;s++)r=(r<<5)-r+n.charCodeAt(s)&4294967295;return r},0);return Math.abs(o).toString(16).substring(0,6)}function Je(e){let t=Ye(e);return{needsCropping:!0,requiresImageDimensions:!1,cropTransform:e,filenameSuffix:`${t}`}}function Se(e,t=!1){let o={colors:[]};return S("strokes",e)&&Array.isArray(e.strokes)&&e.strokes.length&&(o.colors=e.strokes.filter(R).map(r=>q(r,t))),S("strokeWeight",e)&&typeof e.strokeWeight=="number"&&e.strokeWeight>0&&(o.strokeWeight=`${e.strokeWeight}px`),S("strokeDashes",e)&&Array.isArray(e.strokeDashes)&&e.strokeDashes.length&&(o.strokeDashes=e.strokeDashes),S("individualStrokeWeights",e,le)&&(o.strokeWeight=k(e.individualStrokeWeights)),o}function q(e,t=!1){if(e.type==="IMAGE"){let o={type:"IMAGE",imageRef:e.imageRef,scaleMode:e.scaleMode,scalingFactor:e.scalingFactor},r=t||o.scaleMode==="TILE",{css:i,processing:n}=Xe(o.scaleMode,r,e.scalingFactor),s=n;if(e.imageTransform){let a=Je(e.imageTransform);s={...n,...a,requiresImageDimensions:n.requiresImageDimensions||a.requiresImageDimensions}}return{...o,...i,imageDownloadArguments:s}}else if(e.type==="SOLID"){let{hex:o,opacity:r}=ye(e.color,e.opacity);return r===1?o:O(e.color,r)}else{if(e.type==="PATTERN")return Ze(e);if(["GRADIENT_LINEAR","GRADIENT_RADIAL","GRADIENT_ANGULAR","GRADIENT_DIAMOND"].includes(e.type))return{type:e.type,gradientHandlePositions:e.gradientHandlePositions,gradientStops:e.gradientStops.map(({position:o,color:r})=>({position:o,color:ye(r)}))};throw new Error(`Unknown paint type: ${e.type}`)}}function Ze(e){let t="repeat",o="left";switch(e.horizontalAlignment){case"START":o="left";break;case"CENTER":o="center";break;case"END":o="right";break}let r="top";switch(e.verticalAlignment){case"START":r="top";break;case"CENTER":r="center";break;case"END":r="bottom";break}return{type:e.type,patternSource:{type:"IMAGE-PNG",nodeId:e.sourceNodeId},backgroundRepeat:t,backgroundSize:`${Math.round(e.scalingFactor*100)}%`,backgroundPosition:`${o} ${r}`}}function ye(e,t=1){let o=Math.round(e.r*255),r=Math.round(e.g*255),i=Math.round(e.b*255),n=Math.round(t*e.a*100)/100;return{hex:"#"+((1<<24)+(o<<16)+(r<<8)+i).toString(16).slice(1).toUpperCase(),opacity:n}}function O(e,t=1){let o=Math.round(e.r*255),r=Math.round(e.g*255),i=Math.round(e.b*255),n=Math.round(t*e.a*100)/100;return`rgba(${o}, ${r}, ${i}, ${n})`}function xe(e){if(!S("effects",e))return{};let t=e.effects.filter(l=>l.visible),o=t.filter(l=>l.type==="DROP_SHADOW").map(Qe),r=t.filter(l=>l.type==="INNER_SHADOW").map(et),i=[...o,...r].join(", "),n=t.filter(l=>l.type==="LAYER_BLUR").map(be).join(" "),s=t.filter(l=>l.type==="BACKGROUND_BLUR").map(be).join(" "),a={};return i&&(e.type==="TEXT"?a.textShadow=i:a.boxShadow=i),n&&(a.filter=n),s&&(a.backdropFilter=s),a}function Qe(e){return`${e.offset.x}px ${e.offset.y}px ${e.radius}px ${e.spread??0}px ${O(e.color)}`}function et(e){return`inset ${e.offset.x}px ${e.offset.y}px ${e.radius}px ${e.spread??0}px ${O(e.color)}`}function be(e){return`blur(${e.radius}px)`}function Te(e){return e.type==="TEXT"}function W(e){return S("style",e)&&Object.keys(e.style).length>0}function Ie(e){if(S("characters",e,se))return e.characters}function we(e){if(W(e)){let t=e.style;return{fontFamily:t.fontFamily,fontWeight:t.fontWeight,fontSize:t.fontSize,lineHeight:"lineHeightPx"in t&&t.lineHeightPx&&t.fontSize?`${t.lineHeightPx/t.fontSize}em`:void 0,letterSpacing:t.letterSpacing&&t.letterSpacing!==0&&t.fontSize?`${t.letterSpacing/t.fontSize*100}%`:void 0,textCase:t.textCase,textAlignHorizontal:t.textAlignHorizontal,textAlignVertical:t.textAlignVertical}}}function N(e,t,o){let[r]=Object.entries(e.styles).find(([n,s])=>JSON.stringify(s)===JSON.stringify(t))??[];if(r)return r;let i=Y(o);return e.styles[i]=t,i}var L=(e,t,o)=>{let r=he(e,o.parent);Object.keys(r).length>1&&(t.layout=N(o.globalVars,r,"layout"))},G=(e,t,o)=>{if(Te(e)&&(t.text=Ie(e)),W(e)){let r=we(e);t.textStyle=N(o.globalVars,r,"style")}},K=(e,t,o)=>{let r=S("children",e)&&Array.isArray(e.children)&&e.children.length>0;if(S("fills",e)&&Array.isArray(e.fills)&&e.fills.length){let s=e.fills.map(a=>q(a,r));t.fills=N(o.globalVars,s,"fill")}let i=Se(e,r);i.colors.length&&(t.strokes=N(o.globalVars,i,"stroke"));let n=xe(e);Object.keys(n).length&&(t.effects=N(o.globalVars,n,"effect")),S("opacity",e)&&typeof e.opacity=="number"&&e.opacity!==1&&(t.opacity=e.opacity),S("cornerRadius",e)&&typeof e.cornerRadius=="number"&&(t.borderRadius=`${e.cornerRadius}px`),S("rectangleCornerRadii",e,me)&&(t.borderRadius=`${e.rectangleCornerRadii[0]}px ${e.rectangleCornerRadii[1]}px ${e.rectangleCornerRadii[2]}px ${e.rectangleCornerRadii[3]}px`)},Fe=(e,t,o)=>{e.type==="INSTANCE"&&(S("componentId",e)&&(t.componentId=e.componentId),S("componentProperties",e)&&(t.componentProperties=Object.entries(e.componentProperties??{}).map(([r,{value:i,type:n}])=>({name:r,value:i.toString(),type:n}))))},X=[L,G,K,Fe],tt=[L,G],ot=[G],it=[K],rt=[L];import nt from"js-yaml";var Re={fileKey:B.string().describe("The key of the Figma file to fetch, often found in a provided URL like figma.com/(file|design)/<fileKey>/..."),nodeId:B.string().optional().describe("The ID of the node to fetch, often found as URL parameter node-id=<nodeId>, always use if provided"),depth:B.number().optional().describe("OPTIONAL. Do NOT use unless explicitly requested by the user. Controls how many levels deep to traverse the node tree.")},vo=B.object(Re);async function st(e,t,o){try{let{fileKey:r,nodeId:i,depth:n}=e;c.log(`Fetching ${n?`${n} layers deep`:"all layers"} of ${i?`node ${i} from file`:"full file"} ${r}`);let s;i?s=await t.getRawNode(r,i,n):s=await t.getRawFile(r,n);let a=U(s,X,{maxDepth:n});E("figma-simplified.json",a),c.log(`Successfully extracted data: ${a.nodes.length} nodes, ${Object.keys(a.globalVars.styles).length} styles`);let{nodes:l,globalVars:d,...h}=a,u={metadata:h,nodes:l,globalVars:d};c.log(`Generating ${o.toUpperCase()} result from extracted data`);let m=o==="json"?JSON.stringify(u,null,2):nt.dump(u);return c.log("Sending result to client"),{content:[{type:"text",text:m}]}}catch(r){let i=r instanceof Error?r.message:JSON.stringify(r);return c.error(`Error fetching file ${e.fileKey}:`,i),{isError:!0,content:[{type:"text",text:`Error fetching file: ${i}`}]}}}var A={name:"get_figma_data",description:"Get comprehensive Figma file data including layout, content, visuals, and component information",parameters:Re,handler:st};import{z as x}from"zod";var Ae={fileKey:x.string().describe("The key of the Figma file containing the images"),nodes:x.object({nodeId:x.string().describe("The ID of the Figma image node to fetch, formatted as 1234:5678"),imageRef:x.string().optional().describe("If a node has an imageRef fill, you must include this variable. Leave blank when downloading Vector SVG images."),fileName:x.string().describe("The local name for saving the fetched file, including extension. Either png or svg."),needsCropping:x.boolean().optional().describe("Whether this image needs cropping based on its transform matrix"),cropTransform:x.array(x.array(x.number())).optional().describe("Figma transform matrix for image cropping"),requiresImageDimensions:x.boolean().optional().describe("Whether this image requires dimension information for CSS variables"),filenameSuffix:x.string().optional().describe("Suffix to add to filename for unique cropped images, provided in the Figma data (e.g., 'abc123')")}).array().describe("The nodes to fetch as images"),pngScale:x.number().positive().optional().default(2).describe("Export scale for PNG images. Optional, defaults to 2 if not specified. Affects PNG images only."),localPath:x.string().describe("The absolute path to the directory where images are stored in the project. If the directory does not exist, it will be created. The format of this path should respect the directory format of the operating system you are running on. Don't use any special character escaping in the path name either.")},Co=x.object(Ae);async function at(e,t){try{let{fileKey:o,nodes:r,localPath:i,pngScale:n=2}=e,s=[],a=new Map,l=new Map;for(let m of r){let g=m.fileName;if(m.filenameSuffix&&!g.includes(m.filenameSuffix)){let p=g.split(".").pop();g=`${g.substring(0,g.lastIndexOf("."))}-${m.filenameSuffix}.${p}`}let f={fileName:g,needsCropping:m.needsCropping||!1,cropTransform:m.cropTransform,requiresImageDimensions:m.requiresImageDimensions||!1};if(m.imageRef){let p=`${m.imageRef}-${m.filenameSuffix||"none"}`;if(!m.filenameSuffix&&l.has(p)){let y=l.get(p),b=a.get(y);b.includes(g)||b.push(g),f.requiresImageDimensions&&(s[y].requiresImageDimensions=!0)}else{let y=s.length;s.push({...f,imageRef:m.imageRef}),a.set(y,[g]),l.set(p,y)}}else{let p=s.length;s.push({...f,nodeId:m.nodeId}),a.set(p,[g])}}let d=await t.downloadImages(o,i,s,{pngScale:n}),h=d.filter(Boolean).length,u=d.map((m,g)=>{let f=m.filePath.split("/").pop()||m.filePath,p=`${m.finalDimensions.width}x${m.finalDimensions.height}`,y=m.wasCropped?" (cropped)":"",b=m.cssVariables?`${p} | ${m.cssVariables}`:p,T=a.get(g)||[f],F=T.length>1?` (also requested as: ${T.filter(I=>I!==f).join(", ")})`:"";return`- ${f}: ${b}${y}${F}`}).join(`
`);return{content:[{type:"text",text:`Downloaded ${h} images:
${u}`}]}}catch(o){return c.error(`Error downloading images from ${e.fileKey}:`,o),{isError:!0,content:[{type:"text",text:`Failed to download images: ${o instanceof Error?o.message:String(o)}`}]}}}var v={name:"download_figma_images",description:"Download SVG and PNG images used in a Figma file based on the IDs of image or icon nodes",parameters:Ae,handler:at};var ct={name:"Figma MCP Server",version:"0.5.0"};function ve(e,{isHTTP:t=!1,outputFormat:o="yaml",skipImageDownloads:r=!1}={}){let i=new lt(ct),n=new C(e);return mt(i,n,{outputFormat:o,skipImageDownloads:r}),c.isHTTP=t,i}function mt(e,t,o){e.tool(A.name,A.description,A.parameters,r=>A.handler(r,t,o.outputFormat)),o.skipImageDownloads||e.tool(v.name,v.description,v.parameters,r=>v.handler(r,t))}pt({path:ut(process.cwd(),".env")});async function ft(){let e=process.env.NODE_ENV==="cli"||process.argv.includes("--stdio"),t=Q(e),o=ve(t.auth,{isHTTP:!e,outputFormat:t.outputFormat,skipImageDownloads:t.skipImageDownloads});if(e){let r=new gt;await o.connect(r)}else console.log(`Initializing Figma MCP Server in HTTP mode on port ${t.port}...`),await oe(t.port,o)}process.argv[1]&&ft().catch(e=>{console.error("Failed to start server:",e),process.exit(1)});export{Q as a,_ as b,U as c,L as d,G as e,K as f,Fe as g,X as h,tt as i,ot as j,it as k,rt as l,ve as m,ft as n};
